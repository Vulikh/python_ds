# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. 
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.


def division(num1, num2):
	"""Возвращает частное от деления двух чисел.
	
	(number, number) -> number

	division(1, 2)
	0.5

	"""

	try:
		num3 = num1/num2
	except ZeroDivisionError as error:
		print(f'{error}')
		return 0
	return num3

num1, num2 = [int(i) for i in input('Введите два целых числа для деления').split()]

print(division(num1, num2))

# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: 
# имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. 
# Реализовать вывод данных о пользователе одной строкой.


def user_parms(**kwargs):
	"""
	Возвращает переданные именнованные аргументы в виде строки c разделителем ";"

	(**kwargs) -> key - value; key - value ...
	
	>>> user_parms(name = 'Jack', second_name = 'Russel')
	name - Jack; second_name - Russel

	"""
	return ' ; '.join([f'{key} - {value}'.format(key, value) for key,value in kwargs.items()])

print(user_parms(name = 'Jack', second_name = 'Russel', mail = '12@gmail.com',
				city = 'New York', phone = '88005553535' ))


# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.


def my_func(num1, num2, num3):
	"""
	Функция определения максимума из трех чисел. Возвращает максимальное число.

	(number, number, number ) -> number
	
	>>> my_func1(5, 1, 3)
	0.25

	"""
	def max_num(num1, num2):
		if num1 > num2:
			return num1
		else:
			return num2
	return max_num(num1, max_num(num2, num3))

# print(my_func(1,3,5))
# print(my_func(5,3,1))
# print(my_func(3,1,5))

# 4. Программа принимает действительное положительное число x и целое отрицательное число y. 
# Необходимо выполнить возведение числа x в степень y. 
# Задание необходимо реализовать в виде функции my_func(x, y). 
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.


def my_func1(x, y):
	"""
	Функция возведения в отрицательную степень y числа x. На вход функции принимается
	дейстилеьное число x и целое отрицательное y. В случае, если передано положительное
	число x функция возвращает значение -1.
	
	(number, number) -> number

	>>> my_func1(2, -2)
	0.25

	"""
	x = float(x)
	y = int(y)
	if y > 0:
		return -1
	if y == 0:
		return 1
	else:
		return (1/x) * my_func1(x, y+1)

print(my_func1(3, -300))
print(my_func1(3, 3))  


# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. 
# При нажатии Enter должна выводиться сумма чисел. 
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. 
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. 
# Но если вместо числа вводится специальный символ, выполнение программы завершается. 
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих 
# чисел к полученной ранее сумме и после этого завершить программу.



result = 0
check = 1

while check:
	numbers = input('Введите числа через пробел, для выхода введите q: ').split()
	i = 0
	while i < len(numbers):
		if numbers[i] == 'q':
			check = 0
			print('Выполнен выход из программы')
			break
		else:
			result += int(numbers[i])
			i += 1

	print(f'Сумма чисел: {result}')
	

# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв 
# и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.


def int_func(word):
	"""
	Возвращает строку с заглавной буквы. В случае, если на вход функции передана строка с символами в верхнем регистре
	будет возвращена сама строка без изменений.


	(string) -> string

	>>>int_func('word')
	Word

	"""
	check = ord('a')
	offset = 32
	for c in word:
		if ord(c) < check:
			return word
	return chr(ord(word[0]) - offset) + word[1:]

print(int_func('hello'))
print(int_func('Hello'))
print(int_func('heLlo'))

# Продолжить работу над заданием. В программу должна попадать строка из слов, 
# разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре. 
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. 
# Необходимо использовать написанную ранее функцию int_func().

def int_func_join(arr):
	"""
	Возвращает строки с заглавной буквы. В случае, если на вход функции переданы строки с символами в верхнем регистре
	будут возвращены сами строки без изменений.


	(string, string, ...) -> string, string, ...

	>>>int_func_join('hello word')
	Hello Word

	"""

	result = []
	for a in arr:
		result.append(int_func(a))
	return ' '.join(result)

words = input().split()
print(int_func_join(words))
